
class Hw1Q2:
    def monomial_solve(a, b, c):
        a, b, c = int(a), int(b), int(c)
        #if statements format print in case of coefficent of 1 or 0, "(c + 2 * b) / a" solves equation
        if a != 0 and a != 1:
            if b != 0 and b!= 1:
                return str(a) + "x-2*" + str(b) + "=" + str(c) + " is true when x = " + str((c + 2 * b) / a)
            elif b == 1:
                return str(a) + "x-2=" + str(c) + " is true when x = " + str((c + 2 * b) / a)
            else:
                return str(a) + "x=" + str(c) + " is true when x = " + str((c + 2 * b) / a)
        elif a == 1:
            if b != 0 and b != 1:
                return "x-2*" + str(b) + "=" + str(c) + " is true when x = " + str((c + 2 * b) / a)
            elif b == 1:
                return "x-2=" + str(c) + " is true when x = " + str((c + 2 * b) / a)
            else:
                return "x=" + str(c) + " is true when x = " + str((c + 2 * b) / a)
        elif -b*2 == c:
            if b != 0 and b != 1:
                return "2*" + str(b) + "=" + str(c) + " is true for all values of x"
            elif b == 1:
                return "2" + "=" + str(c) + " is true for all values of x"
            else:
                return "0=" + str(c) + " is true for all values of x"
        else:
            if b != 0 and b != 1:
                return "2*" + str(b) + "=" + str(c) + " is not true for all values of x"
            elif b == 1:
                return "2" + "=" + str(c) + " is not true for all values of x"
            else:
                return "0=" + str(c) + " is not true for all values of x"

    def polynomial_solve(a, b, c):
        a, b, c = int(a), int(b), int(c)
        # if statements format print in case of coefficent of 1 or 0, "(c + 2 * b) / a" solves equation
        if a != 0 and a != 1:
            if b != 0 and b != 1:
                return str(a) + "sqrt(x-2*" + str(b) + ")=" + str(c) + " is true when x = " + str((c**2 - 2 * b) / a)
            elif b == 1:
                return str(a) + "sqrt(x-2)=" + str(c) + " is true when x = " + str((c**2 - 2 * b) / a)
            else:
                return str(a) + "sqrt(x)=" + str(c) + " is true when x = " + str((c**2 - 2 * b) / a)
        elif a == 1:
            if b != 0 and b != 1:
                return "sqrt(x-2*" + str(b) + ")=" + str(c) + " is true when x = " + str((c**2 - 2 * b) / a)
            elif b == 1:
                return "sqrt(x-2)=" + str(c) + " is true when x = " + str((c**2 - 2 * b) / a)
            else:
                return "sqrt(x)=" + str(c) + " is true when x = " + str((c**2 - 2 * b) / a)
        elif b*2 == c**2:
            if b != 0 and b != 1:
                return "sqrt(2*" + str(b) + ")=" + str(c) + " is true for all values of x"
            elif b == 1:
                return "sqrt(2)=" + str(c) + " is true for all values of x"
            else:
                return "0=" + str(c) + " is true for all values of x"
        else:
            if b != 0 and b != 1:
                return "2*" + str(b) + "=" + str(c) + " is not true for all values of x"
            elif b == 1:
                return "2" + "=" + str(c) + " is not true for all values of x"
            else:
                return "0=" + str(c) + " is not true for all values of x"


#a, b, c = input("Enter a, b, c (in format 'a, b, c') to solve ax-2b=c ").split(", ")
#print(Hw1Q2.monomial_solve(a, b, c))
a, b, c = input("Enter a, b, c (in format 'a, b, c') to solve sqrt(ax-2b)=c ").split(", ")
print(Hw1Q2.polynomial_solve(a, b, c))